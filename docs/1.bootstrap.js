(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "../pkg/seqdia.js":
/*!************************!*\
  !*** ../pkg/seqdia.js ***!
  \************************/
/*! exports provided: pickle_and_gen, load_and_gen, generate, __wbindgen_string_new, __wbindgen_json_parse, __wbindgen_rethrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pickle_and_gen\", function() { return pickle_and_gen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"load_and_gen\", function() { return load_and_gen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generate\", function() { return generate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return __wbindgen_json_parse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_rethrow\", function() { return __wbindgen_rethrow; });\n/* harmony import */ var _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./seqdia_bg.wasm */ \"../pkg/seqdia_bg.wasm\");\n\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} text\n* @returns {any}\n*/\nfunction pickle_and_gen(text) {\n    var ptr0 = passStringToWasm0(text, _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"pickle_and_gen\"](ptr0, len0);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} hash\n* @returns {any}\n*/\nfunction load_and_gen(hash) {\n    var ptr0 = passStringToWasm0(hash, _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"load_and_gen\"](ptr0, len0);\n    return takeObject(ret);\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n* @param {string} text\n* @returns {string}\n*/\nfunction generate(text) {\n    try {\n        var ptr0 = passStringToWasm0(text, _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"generate\"](8, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _seqdia_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n    }\n}\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n\n\n//# sourceURL=webpack:///../pkg/seqdia.js?");

/***/ }),

/***/ "../pkg/seqdia_bg.wasm":
/*!*****************************!*\
  !*** ../pkg/seqdia_bg.wasm ***!
  \*****************************/
/*! exports provided: memory, pickle_and_gen, load_and_gen, generate, __wbindgen_malloc, __wbindgen_realloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./seqdia.js */ \"../pkg/seqdia.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/seqdia_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var seqdia__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seqdia */ \"../pkg/seqdia.js\");\n/* harmony import */ var codemirror__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! codemirror */ \"./node_modules/codemirror/lib/codemirror.js\");\n/* harmony import */ var codemirror__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(codemirror__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var codemirror_lib_codemirror_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! codemirror/lib/codemirror.css */ \"./node_modules/codemirror/lib/codemirror.css\");\n/* harmony import */ var codemirror_lib_codemirror_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(codemirror_lib_codemirror_css__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst editor = codemirror__WEBPACK_IMPORTED_MODULE_1__[\"fromTextArea\"](document.querySelector('textarea'), {\n    lineNumbers: true,\n    lineWrapping: true,\n});\n\nconst widgets = [];\nfunction updateAnnotations(infos) {\n    editor.operation(() => {\n        while (widgets.length) {\n            let widget = widgets.shift();\n            editor.removeLineWidget(widget);\n        }\n\n        infos.forEach(info => {\n            const message = info.message || String(info);\n            const line = info.line || 0;\n            const msg = Object.assign(document.createElement('div'), { });\n            Object.assign(msg.appendChild(document.createElement('pre')), {\n                textContent: message,\n                className: 'error-msg',\n            });\n            widgets.push(editor.addLineWidget(line - 1, msg, {coverGutter: true, noHScroll: true}));\n        });\n    });\n}\n\nif (location.hash.length > 1) {\n    const {text, svg} = seqdia__WEBPACK_IMPORTED_MODULE_0__[\"load_and_gen\"](location.hash);\n    editor.setValue(text);\n    document.querySelector('output').innerHTML = svg;\n}\n\neditor.on('change', (cm, ch) => {\n    const text = cm.getValue();\n    document.querySelector('body').classList.add('incomplete');\n    let result;\n    try {\n        result = seqdia__WEBPACK_IMPORTED_MODULE_0__[\"pickle_and_gen\"](text);\n    } catch (e) {\n        updateAnnotations([e]);\n        throw e;\n    }\n    document.querySelector('body').classList.remove('incomplete');\n    const {pickled, svg} = result;\n    updateAnnotations([]);\n    location.hash = pickled;\n    document.querySelector('output').innerHTML = svg;\n});\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);